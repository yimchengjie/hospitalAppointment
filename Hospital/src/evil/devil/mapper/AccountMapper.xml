<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="evil.devil.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="evil.devil.entity.Account">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="doctor_id" jdbcType="INTEGER" property="doctorId" />
    <result column="date_time" jdbcType="DATE" property="dateTime" />
    <result column="account_time" jdbcType="DATE" property="accountTime" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, doctor_id, date_time, account_time, price, pay_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUser" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where user_id = #{user_id,jdbcType=INTEGER}
  </select>
  <select id="selectByDoctor" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where doctor_id = #{docto_id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
  </select>
  
  
   
 
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="evil.devil.entity.Account">
    insert into account (id, user_id, doctor_id, 
      date_time, account_time, price, 
      pay_type)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{doctorId,jdbcType=INTEGER}, 
      #{dateTime,jdbcType=DATE}, #{accountTime,jdbcType=DATE}, #{price,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="evil.devil.entity.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="dateTime != null">
        date_time,
      </if>
      <if test="accountTime != null">
        account_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=DATE},
      </if>
      <if test="accountTime != null">
        #{accountTime,jdbcType=DATE},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="evil.devil.entity.Account">
    update account
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="dateTime != null">
        date_time = #{dateTime,jdbcType=DATE},
      </if>
      <if test="accountTime != null">
        account_time = #{accountTime,jdbcType=DATE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="evil.devil.entity.Account">
    update account
    set user_id = #{userId,jdbcType=INTEGER},
      doctor_id = #{doctorId,jdbcType=INTEGER},
      date_time = #{dateTime,jdbcType=DATE},
      account_time = #{accountTime,jdbcType=DATE},
      price = #{price,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>